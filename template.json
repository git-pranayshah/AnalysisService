{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "Subscription_Id": {
          "defaultValue": "f39588f8-a5eb-47fc-8605-68dd157901bd",
          "type": "String"
      },
      "servers_sample_db_server_mas_name": {
          "defaultValue":"[concat('samplesqldb-', uniqueString(resourceGroup().id))]",
          "type": "String"
      },
      "privateEndpoints_private_db_name": {
          "defaultValue": "private-db",
          "type": "String"
      },
      "virtualNetworks_default_vnet_name": {
          "defaultValue": "defaultvnet",
          "type": "String"
      },
      "servers_sql_db_awd_login_user": {
          "defaultValue": "sql-admin",
          "type": "String"
      },
      "servers_sql_db_awd_login_password": {
          "defaultValue": "",
          "type": "securestring"
      },
      
      "storageAccounts_storagessqldb_name": {
          "defaultValue":"[concat('stgacc', uniqueString(resourceGroup().id)) ]",
          "type": "String"
      },
      "servers_sampledbmodel_name": {
          "defaultValue": "sampledbmodel",
          "type": "String"
      },
      "privateEndpoints_data_endpoint_name": {
          "defaultValue": "data-endpoint",
          "type": "String"
      },
      "storageAccounts_sqlvawhy345detarvi_name": {
          "defaultValue":"[concat('stgsql', uniqueString(resourceGroup().id))]",
          "type": "String"
      },
      "privateDnsZones_privatelink_database_windows_net_name": {
          "defaultValue": "privatelink.database.windows.net",
          "type": "String"
      },
      "networkInterfaces_private_db_nic_ca0691f2_f1a6_420a_8efe_24cff8b7b54e_name": {
          "defaultValue": "[concat('private-db.nic.', uniqueString(resourceGroup().id))]",
          "type": "String"
      },
      "networkInterfaces_data_endpoint_nic_5da9c71d_8f1d_485a_8448_d712a97e114b_name": {
          "defaultValue": "[concat('data-endpoint.nic.01.', uniqueString(resourceGroup().id))]",
          "type": "String"
      },
      "networkInterfaces_data_endpoint_nic_610f5db7_3af4_40b6_9192_0fa6e4a43cfa_name": {
          "defaultValue": "[concat('data-endpoint.nic.02.', uniqueString(resourceGroup().id))]",
          "type": "String"
      }
  },
  "variables": {},
  "resources": [
      {
          "type": "Microsoft.AnalysisServices/servers",
          "apiVersion": "2017-08-01",
          "name": "[concat(parameters('servers_sampledbmodel_name'),uniqueString(resourceGroup().id))]",
          "location": "West Europe",
          "sku": {
              "name": "D1",
              "tier": "Development",
              "capacity": 1
          },
          "properties": {
              "managedMode": 1,
              "asAdministrators": {
                  "members": [
                      "shahpranay@microsoft.com"
                  ]
              },
              "querypoolConnectionMode": "All",
              "serverMonitorMode": 1
          }
      },
      {
          "type": "Microsoft.Network/networkInterfaces",
          "apiVersion": "2020-11-01",
          "name": "[parameters('networkInterfaces_private_db_nic_ca0691f2_f1a6_420a_8efe_24cff8b7b54e_name')]",
          "location": "westeurope",
          "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_default_vnet_name'))]"
          ],
          "properties": {
              "ipConfigurations": [
                  {
                      "name": "[concat('privateEndpointIpConfig.', uniqueString(resourceGroup().id))]",
                      "properties": {
                          "privateIPAddress": "10.0.2.4",
                          "privateIPAllocationMethod": "Dynamic",
                          "subnet": {
                            "id": "[concat('/subscriptions/', concat(parameters('Subscription_Id'),concat('/resourceGroups/' ,concat(resourceGroup().name, concat('/providers/Microsoft.Network/virtualNetworks/',parameters('virtualNetworks_default_vnet_name'))))), '/subnets/private-data')]"},
                          "primary": true,
                          "privateIPAddressVersion": "IPv4"
                      }
                  }
              ],
              "dnsSettings": {
                  "dnsServers": []
              },
              "enableAcceleratedNetworking": false,
              "enableIPForwarding": false
          }
      },
      {
          "type": "Microsoft.Network/privateDnsZones",
          "apiVersion": "2018-09-01",
          "name": "[parameters('privateDnsZones_privatelink_database_windows_net_name')]",
          "location": "global",
          "properties": {
              "maxNumberOfRecordSets": 25000,
              "maxNumberOfVirtualNetworkLinks": 1000,
              "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
              "numberOfRecordSets": 2,
              "numberOfVirtualNetworkLinks": 1,
              "numberOfVirtualNetworkLinksWithRegistration": 0,
              "provisioningState": "Succeeded"
          }
      },
      {
          "type": "Microsoft.Network/virtualNetworks",
          "apiVersion": "2020-11-01",
          "name": "[parameters('virtualNetworks_default_vnet_name')]",
          "location": "westeurope",
          "properties": {
              "addressSpace": {
                  "addressPrefixes": [
                      "10.0.0.0/16"
                  ]
              },
              "subnets": [
                  {
                      "name": "default",
                      "properties": {
                          "addressPrefix": "10.0.0.0/24",
                          "delegations": [],
                          "privateEndpointNetworkPolicies": "Enabled",
                          "privateLinkServiceNetworkPolicies": "Enabled"
                      }
                  },
                  {
                      "name": "private-data",
                      "properties": {
                          "addressPrefix": "10.0.1.0/24",
                          "serviceEndpoints": [
                              {
                                  "service": "Microsoft.Sql",
                                  "locations": [
                                      "westeurope"
                                  ]
                              }
                          ],
                          "delegations": [],
                          "privateEndpointNetworkPolicies": "Disabled",
                          "privateLinkServiceNetworkPolicies": "Enabled"
                      }
                  }
              ],
              "virtualNetworkPeerings": [],
              "enableDdosProtection": false
          }
      },
      {
          "type": "Microsoft.Sql/servers",
          "apiVersion": "2021-08-01-preview",
          "name": "[parameters('servers_sample_db_server_mas_name')]",
          "location": "westeurope",
          "kind": "v12.0",
          "properties": {
              "administratorLogin": "[parameters('servers_sql_db_awd_login_user')]",
      "administratorLoginPassword": "[parameters('servers_sql_db_awd_login_password')]",
              "version": "12.0",
              "minimalTlsVersion": "1.2",
              "publicNetworkAccess": "Enabled",
              "restrictOutboundNetworkAccess": "Disabled"
          }
      },
      {
          "type": "Microsoft.Storage/storageAccounts",
          "apiVersion": "2021-08-01",
          "name": "[parameters('storageAccounts_sqlvawhy345detarvi_name')]",
          "location": "westeurope",
          "sku": {
              "name": "Standard_LRS",
              "tier": "Standard"
          },
          "kind": "StorageV2",
          "properties": {
              "minimumTlsVersion": "TLS1_2",
              "allowBlobPublicAccess": false,
              "networkAcls": {
                  "bypass": "AzureServices",
                  "virtualNetworkRules": [],
                  "ipRules": [],
                  "defaultAction": "Allow"
              },
              "supportsHttpsTrafficOnly": true,
              "encryption": {
                  "services": {
                      "file": {
                          "keyType": "Account",
                          "enabled": true
                      },
                      "blob": {
                          "keyType": "Account",
                          "enabled": true
                      }
                  },
                  "keySource": "Microsoft.Storage"
              },
              "accessTier": "Hot"
          }
      },
      {
          "type": "Microsoft.Storage/storageAccounts",
          "apiVersion": "2021-08-01",
          "name": "[parameters('storageAccounts_storagessqldb_name')]",
          "location": "eastus",
          "sku": {
              "name": "Standard_LRS",
              "tier": "Standard"
          },
          "kind": "StorageV2",
          "properties": {
              "minimumTlsVersion": "TLS1_2",
              "allowBlobPublicAccess": false,
              "networkAcls": {
                  "bypass": "AzureServices",
                  "virtualNetworkRules": [],
                  "ipRules": [],
                  "defaultAction": "Allow"
              },
              "supportsHttpsTrafficOnly": true,
              "encryption": {
                  "services": {
                      "file": {
                          "keyType": "Account",
                          "enabled": true
                      },
                      "blob": {
                          "keyType": "Account",
                          "enabled": true
                      }
                  },
                  "keySource": "Microsoft.Storage"
              },
              "accessTier": "Hot"
          }
      },
      {
          "type": "Microsoft.Network/networkInterfaces",
          "apiVersion": "2020-11-01",
          "name": "[parameters('networkInterfaces_data_endpoint_nic_5da9c71d_8f1d_485a_8448_d712a97e114b_name')]",
          "location": "westeurope",
          "dependsOn": [
              "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_default_vnet_name'), 'private-data')]"
          ],
          "properties": {
              "ipConfigurations": [
                  {
                      "name": "privateEndpointIpConfig.27fff679-9f2d-47f6-9732-2f07b2d3167b",
                      "properties": {
                          "privateIPAddress": "10.0.1.5",
                          "privateIPAllocationMethod": "Dynamic",
                          "subnet": {
                              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_default_vnet_name'), 'private-data')]"
                          },
                          "primary": true,
                          "privateIPAddressVersion": "IPv4"
                      }
                  }
              ],
              "dnsSettings": {
                  "dnsServers": []
              },
              "enableAcceleratedNetworking": false,
              "enableIPForwarding": false
          }
      },
      {
          "type": "Microsoft.Network/networkInterfaces",
          "apiVersion": "2020-11-01",
          "name": "[parameters('networkInterfaces_data_endpoint_nic_610f5db7_3af4_40b6_9192_0fa6e4a43cfa_name')]",
          "location": "westeurope",
          "dependsOn": [
              "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_default_vnet_name'), 'private-data')]"
          ],
          "properties": {
              "ipConfigurations": [
                  {
                      "name": "privateEndpointIpConfig.67aaa6bb-49f2-4b84-88d4-bb97d2d3a38d",
                      "properties": {
                          "privateIPAddress": "10.0.1.4",
                          "privateIPAllocationMethod": "Dynamic",
                          "subnet": {
                              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_default_vnet_name'), 'private-data')]"
                          },
                          "primary": true,
                          "privateIPAddressVersion": "IPv4"
                      }
                  }
              ],
              "dnsSettings": {
                  "dnsServers": []
              },
              "enableAcceleratedNetworking": false,
              "enableIPForwarding": false
          }
      },
      {
          "type": "Microsoft.Network/privateDnsZones/A",
          "apiVersion": "2018-09-01",
          "name": "[concat(parameters('privateDnsZones_privatelink_database_windows_net_name'), '/sql-db-awd')]",
          "dependsOn": [
              "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_database_windows_net_name'))]"
          ],
          "properties": {
              "ttl": 3600,
              "aRecords": [
                  {
                      "ipv4Address": "10.0.1.4"
                  }
              ]
          }
      },
      {
          "type": "Microsoft.Network/privateDnsZones/SOA",
          "apiVersion": "2018-09-01",
          "name": "[concat(parameters('privateDnsZones_privatelink_database_windows_net_name'), '/@')]",
          "dependsOn": [
              "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_database_windows_net_name'))]"
          ],
          "properties": {
              "ttl": 3600,
              "soaRecord": {
                  "email": "azureprivatedns-host.microsoft.com",
                  "expireTime": 2419200,
                  "host": "azureprivatedns.net",
                  "minimumTtl": 10,
                  "refreshTime": 3600,
                  "retryTime": 300,
                  "serialNumber": 1
              }
          }
      },
      {
          "type": "Microsoft.Network/privateEndpoints",
          "apiVersion": "2020-11-01",
          "name": "[parameters('privateEndpoints_private_db_name')]",
          "location": "westeurope",
          "dependsOn": [
              "[resourceId('Microsoft.Sql/servers', parameters('servers_sample_db_server_mas_name'))]",
              "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_default_vnet_name'))]",
              "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sample_db_server_mas_name'), 'sample-db')]"
          ],
          "properties": {
              "privateLinkServiceConnections": [
                  {
                      "name": "[parameters('privateEndpoints_private_db_name')]",
                      "properties": {
                          "privateLinkServiceId": "[resourceId('Microsoft.Sql/servers', parameters('servers_sample_db_server_mas_name'))]",
                          "groupIds": [
                              "SqlServer"
                          ],
                          "privateLinkServiceConnectionState": {
                              "status": "Approved",
                              "description": "Auto-approved",
                              "actionsRequired": "None"
                          }
                      }
                  }
              ],
              "manualPrivateLinkServiceConnections": [],
              "subnet": {
                  "id": "[concat('/subscriptions/', concat(parameters('Subscription_Id'),concat('/resourceGroups/' ,concat(resourceGroup().name, concat('/providers/Microsoft.Network/virtualNetworks/',parameters('virtualNetworks_default_vnet_name'))))), '/subnets/private-data')]"
                          
               },
              "customDnsConfigs": [
                  {
                      "fqdn": "sample-db-server-mas.database.windows.net",
                      "ipAddresses": [
                          "10.0.2.4"
                      ]
                  }
              ]
          }
      },
      {
          "type": "Microsoft.Network/virtualNetworks/subnets",
          "apiVersion": "2020-11-01",
          "name": "[concat(parameters('virtualNetworks_default_vnet_name'), '/default')]",
          "dependsOn": [
              "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_default_vnet_name'))]"
          ],
          "properties": {
              "addressPrefix": "10.0.0.0/24",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
          }
      },
      {
          "type": "Microsoft.Network/virtualNetworks/subnets",
          "apiVersion": "2020-11-01",
          "name": "[concat(parameters('virtualNetworks_default_vnet_name'), '/private-data')]",
          "dependsOn": [
              "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_default_vnet_name'))]"
          ],
          "properties": {
              "addressPrefix": "10.0.1.0/24",
              "serviceEndpoints": [
                  {
                      "service": "Microsoft.Sql",
                      "locations": [
                          "westeurope"
                      ]
                  }
              ],
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
          }
      },
      {
          "type": "Microsoft.Sql/servers/advisors",
          "apiVersion": "2014-04-01",
          "name": "[concat(parameters('servers_sample_db_server_mas_name'), '/ForceLastGoodPlan')]",
          "dependsOn": [
              "[resourceId('Microsoft.Sql/servers', parameters('servers_sample_db_server_mas_name'))]"
          ],
          "properties": {
              "autoExecuteValue": "Enabled"
          }
      },
      {
          "type": "Microsoft.Sql/servers/connectionPolicies",
          "apiVersion": "2021-08-01-preview",
          "name": "[concat(parameters('servers_sample_db_server_mas_name'), '/default')]",
          "location": "westeurope",
          "dependsOn": [
              "[resourceId('Microsoft.Sql/servers', parameters('servers_sample_db_server_mas_name'))]"
          ],
          "properties": {
              "connectionType": "Default"
          }
      },
      {
          "type": "Microsoft.Sql/servers/databases",
          "apiVersion": "2021-08-01-preview",
          "name": "[concat(parameters('servers_sample_db_server_mas_name'), '/sample-db')]",
          "location": "westeurope",
          "dependsOn": [
              "[resourceId('Microsoft.Sql/servers', parameters('servers_sample_db_server_mas_name'))]"
          ],
          "sku": {
              "name": "GP_Gen5",
              "tier": "GeneralPurpose",
              "family": "Gen5",
              "capacity": 2
          },
          "kind": "v12.0,user,vcore",
          "properties": {
              "collation": "SQL_Latin1_General_CP1_CI_AS",
              "maxSizeBytes": 34359738368,
              "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
              "zoneRedundant": false,
              "licenseType": "LicenseIncluded",
              "readScale": "Disabled",
              "requestedBackupStorageRedundancy": "Geo",
              "maintenanceConfigurationId": "/subscriptions/f39588f8-a5eb-47fc-8605-68dd157901bd/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_Default",
              "isLedgerOn": false
          }
      },
      {
          "type": "Microsoft.Sql/servers/encryptionProtector",
          "apiVersion": "2021-08-01-preview",
          "name": "[concat(parameters('servers_sample_db_server_mas_name'), '/current')]",
          "dependsOn": [
              "[resourceId('Microsoft.Sql/servers', parameters('servers_sample_db_server_mas_name'))]"
          ],
          "kind": "servicemanaged",
          "properties": {
              "serverKeyName": "ServiceManaged",
              "serverKeyType": "ServiceManaged",
              "autoRotationEnabled": false
          }
      },
      {
          "type": "Microsoft.Sql/servers/firewallRules",
          "apiVersion": "2021-08-01-preview",
          "name": "[concat(parameters('servers_sample_db_server_mas_name'), '/ClientIPAddress_2022-3-22_15-12-16')]",
          "dependsOn": [
              "[resourceId('Microsoft.Sql/servers', parameters('servers_sample_db_server_mas_name'))]"
          ],
          "properties": {
              "startIpAddress": "78.18.89.56",
              "endIpAddress": "78.18.89.56"
          }
      },
      {
          "type": "Microsoft.Sql/servers/firewallRules",
          "apiVersion": "2021-08-01-preview",
          "name": "[concat(parameters('servers_sample_db_server_mas_name'), '/manual')]",
          "dependsOn": [
              "[resourceId('Microsoft.Sql/servers', parameters('servers_sample_db_server_mas_name'))]"
          ],
          "properties": {
              "startIpAddress": "13.93.92.205",
              "endIpAddress": "13.93.92.205"
          }
      },
      {
          "type": "Microsoft.Sql/servers/securityAlertPolicies",
          "apiVersion": "2021-08-01-preview",
          "name": "[concat(parameters('servers_sample_db_server_mas_name'), '/Default')]",
          "dependsOn": [
              "[resourceId('Microsoft.Sql/servers', parameters('servers_sample_db_server_mas_name'))]"
          ],
          "properties": {
              "state": "Enabled",
              "disabledAlerts": [
                  ""
              ],
              "emailAddresses": [
                  ""
              ],
              "emailAccountAdmins": true,
              "retentionDays": 0
          }
      },
      {
          "type": "Microsoft.Storage/storageAccounts/blobServices",
          "apiVersion": "2021-08-01",
          "name": "[concat(parameters('storageAccounts_sqlvawhy345detarvi_name'), '/default')]",
          "dependsOn": [
              "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sqlvawhy345detarvi_name'))]"
          ],
          "sku": {
              "name": "Standard_LRS",
              "tier": "Standard"
          },
          "properties": {
              "cors": {
                  "corsRules": []
              },
              "deleteRetentionPolicy": {
                  "enabled": false
              }
          }
      },
      {
          "type": "Microsoft.Storage/storageAccounts/blobServices",
          "apiVersion": "2021-08-01",
          "name": "[concat(parameters('storageAccounts_storagessqldb_name'), '/default')]",
          "dependsOn": [
              "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storagessqldb_name'))]"
          ],
          "sku": {
              "name": "Standard_LRS",
              "tier": "Standard"
          },
          "properties": {
              "cors": {
                  "corsRules": []
              },
              "deleteRetentionPolicy": {
                  "enabled": false
              }
          }
      },
      {
          "type": "Microsoft.Storage/storageAccounts/fileServices",
          "apiVersion": "2021-08-01",
          "name": "[concat(parameters('storageAccounts_sqlvawhy345detarvi_name'), '/default')]",
          "dependsOn": [
              "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sqlvawhy345detarvi_name'))]"
          ],
          "sku": {
              "name": "Premium_LRS",
              "tier": "Premium"
          },
          "kind": "FileStorage",
          "properties": {
              "allowBlobPublicAccess": true,
              "networkAcls": {
                  "bypass": "AzureServices",
                  "virtualNetworkRules": [],
                  "ipRules": [],
                  "defaultAction": "Allow"
              },
              "supportsHttpsTrafficOnly": true,
              "encryption": {
                  "services": {
                      "file": {
                          "keyType": "Account",
                          "enabled": true
                      },
                      "blob": {
                          "keyType": "Account",
                          "enabled": true
                      }
                  },
                  "keySource": "Microsoft.Storage"
              }
            }

      },
      {
          "type": "Microsoft.Storage/storageAccounts/fileServices",
          "apiVersion": "2021-08-01",
          "name": "[concat(parameters('storageAccounts_storagessqldb_name'), '/default')]",
          "dependsOn": [
              "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storagessqldb_name'))]"
          ],
          "sku": {
              "name": "Premium_LRS",
              "tier": "Premium"
          },
          "kind": "FileStorage",
          "properties": {
              "allowBlobPublicAccess": true,
              "networkAcls": {
                  "bypass": "AzureServices",
                  "virtualNetworkRules": [],
                  "ipRules": [],
                  "defaultAction": "Allow"
              },
              "supportsHttpsTrafficOnly": true,
              "encryption": {
                  "services": {
                      "file": {
                          "keyType": "Account",
                          "enabled": true
                      },
                      "blob": {
                          "keyType": "Account",
                          "enabled": true
                      }
                  },
                  "keySource": "Microsoft.Storage"
              }
            }
      },
      {
          "type": "Microsoft.Storage/storageAccounts/queueServices",
          "apiVersion": "2021-08-01",
          "name": "[concat(parameters('storageAccounts_sqlvawhy345detarvi_name'), '/default')]",
          "dependsOn": [
              "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sqlvawhy345detarvi_name'))]"
          ],
          "properties": {
              "cors": {
                  "corsRules": []
              }
          }
      },
      {
          "type": "Microsoft.Storage/storageAccounts/queueServices",
          "apiVersion": "2021-08-01",
          "name": "[concat(parameters('storageAccounts_storagessqldb_name'), '/default')]",
          "dependsOn": [
              "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storagessqldb_name'))]"
          ],
          "properties": {
              "cors": {
                  "corsRules": []
              }
          }
      },
      {
          "type": "Microsoft.Storage/storageAccounts/tableServices",
          "apiVersion": "2021-08-01",
          "name": "[concat(parameters('storageAccounts_sqlvawhy345detarvi_name'), '/default')]",
          "dependsOn": [
              "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sqlvawhy345detarvi_name'))]"
          ],
          "properties": {
              "cors": {
                  "corsRules": []
              }
          }
      },
      {
          "type": "Microsoft.Storage/storageAccounts/tableServices",
          "apiVersion": "2021-08-01",
          "name": "[concat(parameters('storageAccounts_storagessqldb_name'), '/default')]",
          "dependsOn": [
              "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storagessqldb_name'))]"
          ],
          "properties": {
              "cors": {
                  "corsRules": []
              }
          }
      },
      {
          "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
          "apiVersion": "2018-09-01",
          "name": "[concat(parameters('privateDnsZones_privatelink_database_windows_net_name'), '/ydawybgb3nxyk')]",
          "location": "global",
          "dependsOn": [
              "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_database_windows_net_name'))]",
              "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_default_vnet_name'))]"
          ],
          "properties": {
              "registrationEnabled": false,
              "virtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_default_vnet_name'))]"
              }
          }
      },
      {
          "type": "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies",
          "apiVersion": "2021-08-01-preview",
          "name": "[concat(parameters('servers_sample_db_server_mas_name'), '/sample-db/default')]",
          "dependsOn": [
              "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_sample_db_server_mas_name'), 'sample-db')]",
              "[resourceId('Microsoft.Sql/servers', parameters('servers_sample_db_server_mas_name'))]"
          ],
          "properties": {
              "retentionDays": 7,
              "diffBackupIntervalInHours": 12
          }
      },
     
      {
          "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
          "apiVersion": "2021-08-01",
          "name": "[concat(parameters('storageAccounts_sqlvawhy345detarvi_name'), '/default/vulnerability-assessment')]",
          "dependsOn": [
              "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_sqlvawhy345detarvi_name'), 'default')]",
              "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_sqlvawhy345detarvi_name'))]"
          ],
          "properties": {
              "immutableStorageWithVersioning": {
                  "enabled": false
              },
              "defaultEncryptionScope": "$account-encryption-key",
              "denyEncryptionScopeOverride": false,
              "publicAccess": "None"
          }
      },
      {
          "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
          "apiVersion": "2021-08-01",
          "name": "[concat(parameters('storageAccounts_storagessqldb_name'), '/default/vulnerability-assessment')]",
          "dependsOn": [
              "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_storagessqldb_name'), 'default')]",
              "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storagessqldb_name'))]"
          ],
          "properties": {
              "immutableStorageWithVersioning": {
                  "enabled": false
              },
              "defaultEncryptionScope": "$account-encryption-key",
              "denyEncryptionScopeOverride": false,
              "publicAccess": "None"
          }
      }
  ]
}
